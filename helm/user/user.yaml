---
# Source: user/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: qtapp
---
# Source: user/templates/user-configmap.yaml
# (C) Copyright 2019-2023 Hewlett Packard Enterprise Development LP
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-config
  namespace: qtapp
  labels:
    app: user
    release: release-name
data:
  PORT: "8080"
  USER_URL: "user.qtapp.svc.cluster.local:8080"
  PAYMENT_URL: "payment.qtapp.svc.cluster.local:8080"
  ORDER_URL: "order.qtapp.svc.cluster.local:8080"
  SQL_USER: "root"
  SQL_PASSWORD: "password"
  SQL_HOST: "mysql.mysql.svc.cluster.local:3306"
  SQL_DB: "signoz"
  OTEL_EXPORTER_OTLP_ENDPOINT: "signoz-otel-collector.observability.svc.cluster.local:4317"
---
# Source: user/templates/user-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: qtapp
  name: user
  labels:
    name: user
    app: user
    app.kubernetes.io/name: user
    app.kubernetes.io/instance: user
    chart: user-0.1.0
    heritage: Helm
    release: release-name
spec:
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    name: user
    app: user
    app.kubernetes.io/name: user
    app.kubernetes.io/instance: user
---
# Source: user/templates/user-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    wave.pusher.com/update-on-config-change: "true"
  name: user
  labels:
    name: user
    app: user
    chart: user-0.1.0
    heritage: Helm
    release: release-name
  namespace: qtapp
spec:
  replicas: 
  selector:
    matchLabels:
      name: user
      app: user
      app.kubernetes.io/name: user
      app.kubernetes.io/instance: user
      chart: user-0.1.0

  template:
    metadata:
      labels:
        name: user
        app: user
        app.kubernetes.io/name: user
        app.kubernetes.io/instance: user
        chart: user-0.1.0
      namespace: qtapp
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/support/metrics"
        prometheus.io/port: "8080"
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: node.kubernetes.io/lifecycle
                    operator: In
                    values:
                      - SpotInstance
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - user
                topologyKey: kubernetes.io/hostname
      containers:
        - name: user
          image: "snagarju/user:latest"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: user-config
          env:
            - name: GIN_ACCESS_LOG
              value: "true"
            - name: GIN_MODE
              value: "debug"
          ports:
            - name: http
              protocol: TCP
              containerPort: 8080              
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          readinessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /status
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 2
            periodSeconds: 60
